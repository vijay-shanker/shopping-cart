After putting cart in your installed apps, and adding this:  url(r'^cart/', include('apps.cart.urls')) in your urls.py,
run syncdb or use south to create/modify tables required.

This app assumes your product model has title and price fields.


Add to cart:
You can add "this" link to call AddToCart class for say a product_object instance like this:

<a href="{% url 'add-to-cart' %}?app_label={{product_object|app_label}}&model_name={{product_object|class_name}}&obj_id={{sg.pk}}" >Add to cart</a>   

This link will lead you to a page with product information and calculated number of items and grand total along with
a link to remove item to cart.

The link to remove item from cart is obtained by rendering a form which then redirects to same page.

<form method="POST" action="{% url 'remove-from-cart' %}">{% csrf_token %}
    <input type="hidden" name="cartitem" value="{{cart_item.pk}}" />
    <input type="hidden" name="cart" value="{{cart.pk}}" />
    <input type="submit" value="remove">
</form>